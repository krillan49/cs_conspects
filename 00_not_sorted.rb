# 1 Бит - это выбор из 2х вариантов(вкл и выкл) - Ячейка памяти компьютера состоят из таких переключателей.
# 8 Бит = 1Байт(выбор из 256(2**8) вариантов)

# В кодировке UTF-8 символы кодируются и могут помещаться и в 1(англ буквы) и 2(ру буквы) и 3 и 4 байта в зависимости от символа


# https://lumpics.ru/environment-variables-in-windows-10/    про переменную  PATH

# Зачем добавлять в путь:
# добавить в переменную PATH каталог, в котором размещен исполняемый файл программы. Это избавит от необходимости каждый раз открывать файловый менеджер и переходить в папку с программой.


# Как читать код оказавшись в новом проекте, от самого лучшего способа к менее лучшим:
# 1. Коммиты, начиная с первого, если они норм а не простыни с горой кода в перемешку
# 2. Доки если есть
# 3. Тесты если есть
# 4. Посмотреть приложение через пользовательский интерфейс, потыкав всякое


# У браузера своя по сути виртуальная машина, в которой исполняется особый сорт программ. Грубо говоря это HTML (композиция элементов страницы) + CSS (отрисовка элементов страницы) + JS (манипулирование элементами, динамический отклик и т.д. и т.п.).
# С другой стороны, бекенд это просто ну вот программа на компьютере, исполняемый файл (для интерпретируемых языков - файл с кодом + программа-интерпретатор).


# Чтобы Руби(?? И не только ??) понимал русский язык в интерпритаторе. Руби, Мак и Линукс используют кодировку символов UTF-8, а консоль Винды cp866
# #encoding: cp866 - (не забываем двоеточие после энкодинг)при вводе этой строки в начале программы комментарием мы подсказываем Руби кодировку.
# Потом в Фаре нажимаем F8(чтобы на панели появилось ANCI вместо OEM) в самом фаиле, потом пишем русским
# cp866(code page 866)(также она может называться DOS кодировкой)


# Название символов:
# ~ - тильда
# ^ - карет
# & - и
# | - или
# \ - бэкслэш
# / - слэш



puts '                                       Разное. Определения'

# heap(куча) memory - название оперативной памяти в программировании

# Объект - это определенная часть(участок) занятой оперативной памяти, которая "принадлежит" какому-то фрагмету кода, существующий во время работы программы
# Переменная не “содержит” сам объект, это просто ссылка на область памяти, где на самом деле этот объект хранится. Может быть любое количество переменных, указывающих на один и тот же объект.

# Массив — это структура данных, в которой набор различных данных непрерывно хранится в памяти. К этому набору обычно обращаются по числовому индексу, и он обеспечивает практически мгновенный доступ ко всем данным, хранящимся в массиве, в отличие от других структур, таких как двоичные деревья поиска или связанные списки, где компьютер должен обойти эти структуры, чтобы найти элемент, к которому осуществляется доступ

# Легаси код - код унаследованный(чужой) от предыдущих разработчиков

# рефакторинг кода — это процесс реструктуризации существующего компьютерного кода — изменение факторинга — без изменения его внешнего поведения. Рефакторинг предназначен для улучшения дизайна, структуры и/или реализации программного обеспечения (его нефункциональных атрибутов) при сохранении его функциональности(улучшение кода, чтоб он выглядел лучше и понятнее для разработчика)

# Валидация(validation) - обозначает проверку параметров на их соответсвие ожидаемому. Например если отправлена форма с незаполненными полями

# scraping - область програмирования для парсинга информации

# Инициализация (initialization, инициирование) — создание, активация, подготовка к работе, определение параметров

# application - (приложение)

# папка/директория/folder/каталог - это все одно и тоже

# API (application programming interface) - програмный интерфейс(а нажатие кнопочек это графический), который описывает то как с программой стоит взаимодействовать, те предоставляет способы/правила взаимодействия с программой(если мы пошлем такой-то запрос на такой-то URL, то сервер вернет нам такойто ответ). Те у каждого возможного действия есть то, что ожидается на вход и есть то, что ожидается на выходе.



puts '                                  Альтернативные терминалы для Windows'

# ConEmu уже можно не использовать. Если винда, просто качаем терминал
# https://apps.microsoft.com/detail/9N0DX20HK701?activetab=pivot%3Aoverviewtab&hl=en-us&gl=US



# https://conemu.github.io/              - альтернативный терминал для windows

# ConEmu-Maximus5 - терминал, в котором можно разместить любое консольное приложение, разработанное либо для WinAPI (cmd, powershell, Far), либо для Unix PTY (cygwin, msys, wsl bash).

# В качестве улучшения окна консоли Windows (эмулятор локального терминала) ConEmu представляет несколько консолей и простых приложений с графическим интерфейсом (например, PuTTY) как одно настраиваемое окно графического интерфейса с вкладками и различными функциями.

# Более того, благодаря глубокой интеграции ConEmu — лучший компаньон для Far Manager

# Установка - качаем с репозитория и далее все по умолчанию, запуск тоже.
















#
